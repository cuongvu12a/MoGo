@mixin flex-box(
  $align-items: center,
  $justify-content: center,
  $direction: row,
  $wrap: nowrap,
  $flex: flex
) {
  display: $flex;
  align-items: $align-items;
  justify-content: $justify-content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}
@mixin flex-box2($config: ()) {
  $config: extend(
    (
      align-items: center,
      justify-content: center,
      flex-direction: row,
      flex-wrap: nowrap,
      display: flex,
    ),
    $config
  );
  display: map-get($config, display);
  align-items: map-get($config, align-items);
  justify-content: map-get($config, justify-content);
  flex-direction: map-get($config, flex-direction);
  flex-wrap: map-get($config, flex-wrap);
}
@mixin absolute-center($axis: "both", $start: none, $distance: 0) {
  position: absolute;
  @if $start != none {
    #{$start}: $distance;
  }
  @if $axis == x {
    left: 50%;
    transform: translateX(-50%);
  } @else if $axis == y {
    top: 50%;
    transform: translateY(-50%);
  } @else {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
@mixin position(
  $position: relative,
  $top: none,
  $right: none,
  $bottom: none,
  $left: none
) {
  position: $position;
  @if $top != none {
    top: $top;
  }
  @if $right != none {
    right: $right;
  }
  @if $bottom != none {
    bottom: $bottom;
  }
  @if $left != none {
    left: $left;
  }
}
@mixin size($width: 100%, $height: $width) {
  width: $width;
  height: $height;
}
@mixin text-clamp($rows: 1, $width: 100%) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $rows;
  width: $width;
  max-width: $width;
  text-overflow: ellipsis;
  word-break: break-word;
  white-space: pre-wrap;
  overflow: hidden;
}
@mixin hide-scroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}
@mixin max-width($breakpoint) {
  @media screen and(max-width: $breakpoint) {
    @content;
  }
}
@mixin min-width($breakpoint) {
  @media screen and(min-width: $breakpoint) {
    @content;
  }
}
@mixin hover-effect($itemClass, $contentClass, $transform: "true") {
  #{$itemClass} {
    position: relative;
    transition: all 0.2s linear;
    @if $transform == "true" {
      &:after {
        content: "";
        @include position(absolute, 0, 0, 0, 0);
        background: $third-color;
        z-index: -1;
        transition: all 0.2s linear;
      }
    }
    &:hover {
      @if $transform == "true" {
        transform: translate(-1rem, -1rem);
        &:after {
          transform: translate(1rem, 1rem);
        }
      }
      & #{$contentClass} {
        visibility: visible;
        opacity: 1;
      }
    }
  }
  #{$contentClass} {
    @include position(absolute, 0, 0, 0, 0);
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(
      to bottom,
      rgba($primary-color, 0.8),
      rgba($secondary-color, 0.8)
    );
    opacity: 0;
    visibility: hidden;
    transition: all 0.2s linear;
  }
}

@mixin touch-slider($width: 80%, $gap: 2.5rem, $padding: 1rem) {
  display: grid !important;
  justify-content: flex-start !important;
  @include hide-scroll();
  grid-template-columns: unset;
  grid-auto-columns: $width;
  grid-auto-flow: column;
  grid-column-gap: $gap;
  padding: $padding;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;
  & > * {
    scroll-snap-align: center;
    width: auto;
  }
}
